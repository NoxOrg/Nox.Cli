parameters:
  - name: skipBuild
    displayName: Skip build?
    type: boolean
    default: false
  - name: imageTag
    displayName: 'Enter existing image tag you want to deploy e.g. `branchFolder-buildNumber` format (i.e. feature-20221109.7)'
    type: string
    default: 'latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: 'IWG.DevOps/devops-build-templates'
    - repository: scripts
      type: git
      name: IWG.DevOps/devops-scripts
    - repository: heimdallTemplates
      type: git
      name: 'Heimdall.Core/Templates.Pipeline'
  pipelines:
    - pipeline: helmChart
      source: <project-name>.HelmChart
      trigger:
        branches:
          include:
            - main

trigger:
  branches:
    include:
      - main
      - develop
      - release/*
      - hotfix/*

pool:
  vmImage: ubuntu-latest

variables:
  - template: common/branch-names.yaml@templates
  - template: variables/global.yml@heimdallTemplates
  - template: pipeline/variables/global.yaml

stages:
  - stage: CI_Build
    displayName: 'Build'
    condition: and(succeeded(), eq(${{ parameters.skipBuild }}, false))
    jobs:
      # - job: CI_Build
      #   displayName: 'Build'
      #   steps:
      #     - template: build-template.yml@heimdallTemplates
      #       parameters:
      #         SonarcloudProjectKey: $(SonarcloudProjectKey)
      #         SourceFolder: $(SourceFolder)
      #         runSonarCloud: false
      #         ignoreSonarGate: true
      #         skipComponentTests: true
      - job: CI_Build_Docker
        displayName: 'Docker Build/Push'
        # dependsOn: 'CI_Build'
        # condition: succeeded()
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: build-docker.yml@heimdallTemplates
            parameters:
              dockerfile: $(dockerfilePath)
              buildContext: $(buildContext)
              repository: $(service_name)
              pushImage: ${{ not(contains(variables['Build.Reason'], 'PullRequest')) }}
              pushInPlatformN: true
              pushInPlatformP: false

  - stage: CD_Test
    displayName: 'Test Deployment WE'
    ${{ if eq(parameters.skipBuild, false)}}:
      dependsOn: CI_Build
    condition: |
      and(
        or(succeeded(), ${{ parameters.skipBuild }}), 
        or(eq(variables.isMain, 'true'),eq(variables.isFeature, 'true'))
      )
    jobs:
      - deployment: CD_Test
        displayName: 'Deployment'
        pool:
          name: $(poolName)
        environment: <project-dash-name>-we
        variables:
          - template: pipeline/variables/preprod-we-test.yaml
          - template: variables/APPS_EU_PLATFORM_N_WE.yml@heimdallTemplates
        strategy:
          runOnce:
            deploy:
              steps:
                - template: deployment.yml@heimdallTemplates
                  parameters:
                    runMigration: false
                    envKeyVaultName: $(ENV_KEYVAULT_NAME)
                    imageTag: ${{ parameters.imageTag }}
                    skipBuild: ${{ parameters.skipBuild }}
